/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Argos;

import AGInterfaceWS.BRMeter;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultMutableTreeNode;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author NJINU
 */
public class ArgosMainUI extends javax.swing.JFrame
{

    TXUtility txutil = new TXUtility();

    /**
     * Creates new form ArgosUI
     */
    public ArgosMainUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jSplitPane1 = new javax.swing.JSplitPane();
        displayScroller = new javax.swing.JScrollPane();
        displayPane = ArgosMain.displayArea;
        jSplitPane2 = new javax.swing.JSplitPane();
        agScroller = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        argScrollPane = new javax.swing.JScrollPane();
        txnDispTable = new javax.swing.JTable();
        jToolBar2 = new javax.swing.JToolBar();
        shutdownButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        meterToolBar = new javax.swing.JToolBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Argos Interface ~ Neptune Software");
        setIconImage(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/images/icon.png")));
        setResizable(false);

        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setDividerSize(7);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        displayPane.setEditable(false);
        displayPane.setBackground(new java.awt.Color(204, 255, 204));
        displayScroller.setViewportView(displayPane);

        jSplitPane1.setRightComponent(displayScroller);

        jSplitPane2.setDividerLocation(150);
        jSplitPane2.setDividerSize(7);

        agScroller.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Transaction");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Individual Loan");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Group Loan");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Group Member");
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setCellRenderer(new Argos.TRenderer());
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener()
        {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt)
            {
                jTree1ValueChanged(evt);
            }
        });
        agScroller.setViewportView(jTree1);

        jSplitPane2.setLeftComponent(agScroller);

        txnDispTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Group Account Ref", "Group Account No", "Amount", "Status"
            }
        ));
        argScrollPane.setViewportView(txnDispTable);

        jSplitPane2.setRightComponent(argScrollPane);

        jSplitPane1.setLeftComponent(jSplitPane2);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        shutdownButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit64.png"))); // NOI18N
        shutdownButton.setToolTipText("Shutdown");
        shutdownButton.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray));
        shutdownButton.setFocusable(false);
        shutdownButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        shutdownButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        shutdownButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                shutdownButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(shutdownButton);

        aboutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help64.png"))); // NOI18N
        aboutButton.setToolTipText("About");
        aboutButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(0, 2, 0, 0), javax.swing.BorderFactory.createLineBorder(java.awt.Color.lightGray)));
        aboutButton.setFocusable(false);
        aboutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        aboutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        aboutButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aboutButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(aboutButton);

        meterToolBar.setBorder(null);
        meterToolBar.setFloatable(false);
        meterToolBar.setRollover(true);
        meterToolBar.setToolTipText("");
        meterToolBar.setOpaque(false);

        setIsoMeters();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 826, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(meterToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(meterToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shutdownButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_shutdownButtonActionPerformed
    {//GEN-HEADEREND:event_shutdownButtonActionPerformed
        // TODO add your handling code here:
        ArgosMain.shutdown();
    }//GEN-LAST:event_shutdownButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_aboutButtonActionPerformed
    {//GEN-HEADEREND:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        showAboutInfo();
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt)//GEN-FIRST:event_jTree1ValueChanged
    {//GEN-HEADEREND:event_jTree1ValueChanged
        DefaultMutableTreeNode extPayNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (extPayNode != null)
        {
            try
            {
                displayValue();
            }
            catch (SQLException ex)
            {
                Logger.getLogger(ArgosMainUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jTree1ValueChanged

    private void displayValue() throws SQLException
    {
        ResultSet txnData;
        DefaultMutableTreeNode selectedExtPayNode = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
        if (selectedExtPayNode != null)
        {
            String selectedRec = selectedExtPayNode.getUserObject().toString();
            switch (selectedRec)
            {
                case "Transactions":
                    break;
                case "Individual Loan":
                    txnData = txutil.queryIndividualLoan();
                    //txnDispTable
                    if (txnData == null)
                    {
                        JOptionPane.showMessageDialog(ArgosMain.uiFrame, " Failed to retrieve account information from database. Please check logs file for details.", "Database Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else if (!txnData.next())
                    {
                        JOptionPane.showMessageDialog(ArgosMain.uiFrame, "No records were found in database. Please consult System Administrator.", "Database Error", JOptionPane.ERROR_MESSAGE);
                        ArgosMainUI.txnDispTable.setModel(DbUtils.resultSetToTableModel(txnData));
                    }
                    else
                    {
                        ArgosMainUI.txnDispTable.setModel(DbUtils.resultSetToTableModel(txnData));

                    }

                    break;
                case "Group Loan":
                    txnData = txutil.queryGroupLoan();
                    if (txnData == null)
                    {
                        JOptionPane.showMessageDialog(ArgosMain.uiFrame, " Failed to retrieve account information from database. Please check logs file for details.", "Database Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else if (!txnData.next())
                    {
                        JOptionPane.showMessageDialog(ArgosMain.uiFrame, "No records were found in database. Please consult System Administrator.", "Database Error", JOptionPane.ERROR_MESSAGE);
                        ArgosMainUI.txnDispTable.setModel(DbUtils.resultSetToTableModel(txnData));
                    }
                    else
                    {
                        ArgosMainUI.txnDispTable.setModel(DbUtils.resultSetToTableModel(txnData));
                    }

                    break;
                case "Group Member":
                    txnData = txutil.queryattachedMembers();
                    if (txnData == null)
                    {
                        JOptionPane.showMessageDialog(ArgosMain.uiFrame, " Failed to retrieve account information from database. Please check logs file for details.", "Database Error", JOptionPane.ERROR_MESSAGE);
                    }
                    else if (!txnData.next())
                    {
                        JOptionPane.showMessageDialog(ArgosMain.uiFrame, "No records were found in database. Please consult System Administrator.", "Database Error", JOptionPane.ERROR_MESSAGE);
                        ArgosMainUI.txnDispTable.setModel(DbUtils.resultSetToTableModel(txnData));
                    }
                    else
                    {
                        ArgosMainUI.txnDispTable.setModel(DbUtils.resultSetToTableModel(txnData));
                    }
                    break;
                default:
                    break;
            }
        }
    }

    private void showAboutInfo()
    {
        JOptionPane.showMessageDialog(null,
                "<html><font face=\"Arial\" weight=\"plain\" size=\"2\">Product licensed to FINCA DRC, Kinshasa DRC"
                + "<br/>Copyright \u00A9 2016 Neptune Software Plc, 7th floor Victoria Towers,"
                + "<br/>Kilimanjaro Road, Upperhill, Nairobi Kenya. All rights reserved.</font></html>", "Ruby Bridge Payments Adaptor", JOptionPane.INFORMATION_MESSAGE);

    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ArgosMainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ArgosMainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ArgosMainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ArgosMainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ArgosMainUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JScrollPane agScroller;
    private javax.swing.JScrollPane argScrollPane;
    private javax.swing.JTextPane displayPane;
    private javax.swing.JScrollPane displayScroller;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTree jTree1;
    private javax.swing.JToolBar meterToolBar;
    private javax.swing.JButton shutdownButton;
    public static javax.swing.JTable txnDispTable;
    // End of variables declaration//GEN-END:variables
private BRMeter brMeter = new BRMeter("Argos Interface");

    public static void shutdown()
    {
        exit();
    }

    private static void exit()
    {
        System.exit(0);
    }

    public void setIsoMeters()
    {
        meterToolBar.removeAll();

        meterToolBar.add(getBrMeter());
        meterToolBar.add(Box.createHorizontalGlue());
        meterToolBar.addSeparator();

        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                try
                {
                    Thread.sleep(50);
                    meterToolBar.updateUI();
                }
                catch (Exception ex)
                {
                    ex = null;
                }
            }
        });
    }

    /**
     * @return the brMeter
     */
    public BRMeter getBrMeter()
    {
        return brMeter;
    }

    /**
     * @param brMeter the brMeter to set
     */
    public void setBrMeter(BRMeter brMeter)
    {
        this.brMeter = brMeter;
    }

}
